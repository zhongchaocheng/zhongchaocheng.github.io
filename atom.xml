<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>进击的小超人</title>
  
  <subtitle>记录生活，记录思考</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhongchaocheng.github.io/"/>
  <updated>2019-03-31T17:30:48.100Z</updated>
  <id>https://zhongchaocheng.github.io/</id>
  
  <author>
    <name>七月的Leo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo博客进阶玩法(草稿)</title>
    <link href="https://zhongchaocheng.github.io/Hexo%E5%8D%9A%E5%AE%A2%E8%BF%9B%E9%98%B6%E7%8E%A9%E6%B3%95/"/>
    <id>https://zhongchaocheng.github.io/Hexo博客进阶玩法/</id>
    <published>2019-03-31T16:34:50.000Z</published>
    <updated>2019-03-31T17:30:48.100Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>本文为个人前一篇文章<a href>hexo搭建个人博客–基础篇</a>的后续篇，前文主要介绍了如何搭建一个个人网站以及绑定域名等相关内容，还没有建站的伙伴们可以看一下前文，已经搭建好的就可以忽略了。<br>本文的优化是基于Hexo的NexT主题的，其他主题的疑问也可以在后台或评论区一起沟通交流。<br><a id="more"></a></p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>1 实用性优化</p><ul><li>基本使用（<code>_config.yml</code>文件配置）</li><li>添加RSS</li><li>添加标签、分类等页面</li><li>设置网站icon</li><li>添加侧边栏社交链接</li><li>添加侧边栏友情链接</li><li>底部显示建站时间和图标的修改</li><li>微信支付宝打赏功能</li><li>关闭网站动画效果</li><li>设置第三方JS库</li><li>添加评论系统</li><li>统计访客量以及文章阅读量</li><li>阅读次数统计（基于LanCloud）</li><li>字数统计</li><li>增加版权信息</li><li>添加文章分享功能</li><li>文章排序优先级设置</li><li>添加站内搜索功能</li><li>DaoVoice在线联系</li></ul><p>2 个性化优化</p><ul><li>设置字体</li><li>设置代码高亮主题</li><li>左上角或右上角的Github样式</li><li>添加背景动画</li><li>添加顶部加载条</li><li>点击出现小爱心效果</li><li>修改文章链接文本样式</li><li>修改文章底部标签样式</li><li>文章末尾统一添加“文本结束”标记</li><li>修改作者头像并旋转</li><li>文章添加阴影效果</li><li>修改打赏部分字体动画</li><li>自定义鼠标样式</li><li>添加看板娘</li></ul><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>以下修改保存后均可通过<code>hexo g &amp;&amp; hexo s</code>指令在本地<code>http://localhost:4000</code>查看修改，另外通过<code>hexo d</code>发布到GitHub pages 或 Coding pages上面通过绑定的域名在线查看效果。</p><h2 id="实用性优化"><a href="#实用性优化" class="headerlink" title="实用性优化"></a>实用性优化</h2><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><blockquote><p>上一篇文章已经讲过如何安装Hexo，不了解的小伙伴可以参考一下我的上一篇文章，或者访问<a href>Hexo文档</a>来了解如何安装Hexo。</p></blockquote><p>在Hexo中有两个很重要的名为<code>_config.yml</code>的文件，其中一个在站点安装的根目录下，另一个在主题目录下。前者提供了Hexo自身的一些基本配置信息，后者为你所安装的主题的相关配置。为了方便区分，我们把前者称为<strong>站点配置文件</strong>，后者称为<strong>主题配置文件</strong>。</p><h4 id="站点配置文件"><a href="#站点配置文件" class="headerlink" title="站点配置文件"></a>站点配置文件</h4><p>文件路径<code>站点根目录/_config.yml</code>，编辑软件推荐使用Sublime Text 。<br>这里贴一下个人的部分配置，可以改一下相关内容自行体会一下效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Alvabill</span><br><span class="line">subtitle: Stay Hungry, Stay Foolish</span><br><span class="line">author: Alvabill</span><br><span class="line">description: &quot;Alvabill个人站，主要涉及前端知识共享、实践教程、前沿技术共同学习等方面&quot;  #网站描述 SEO</span><br><span class="line">language: en</span><br><span class="line">timezone: Asia/Shanghai</span><br></pre></td></tr></table></figure><p>“title”：博客的名称。<br>“subtitle”：根据主题的不同，有的会显示有的不会显示。<br>“description”：主要用于SEO，告诉搜索引擎一个关于站点的简单描述，通常建议在其中包含网站的关键词。<br>“author”：作者名称，用于主题显示文章的作者。<br>“language”：语言会对应的解析正在应用的主题中的languages文件夹下的不同语言文件。所以这里的名称要和languages文件夹下的语言文件名称一致。<br>“timezone”：可不填写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: http://alvabill.ml</span><br><span class="line">root: /</span><br><span class="line">permalink: :title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><p>“url”：一般填写自己的站点链接。<br>“root”：设置根目录的位置。如果你的网站存放在子目录中，例如 <code>http://yoursite.com/blog</code>，则应该将你的 url 设为<code>http://yoursite.com/blog</code> 并把 root 设为 <code>/blog/</code>。<br>“permalink”：生成的链接的格式。带井号的是默认的格式，带有日期感觉怪怪的，改成了自己喜欢的格式。规则也比较简单，标签前面要加英文冒号。<br>“permalink_defaults”: 生成链接中各部分的默认值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Directory</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line">  - README.md</span><br><span class="line">  - CNAME</span><br></pre></td></tr></table></figure><p>目录一般不需要修改，这里需要改动的是<code>skip_render</code>，跳过指定文件的渲染，这里写上去着两个文件名便可，在上一篇文章中已经详细描述过这里就不累赘了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: false</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br></pre></td></tr></table></figure><p>书写相关的设置<br>“new_post_name”：新的博文的文件名<br>“default_layout:“ 默认布局<br>“filename_case: 0“ #把文件名称转换为 (1) 小写或 (2) 大写<br>“render_drafts: false“ 是否显示草稿<br>“post_asset_folder: false“ #是否启动资源文件夹<br>“relative_link: false“ #把链接改为与根目录的相对位址<br>“future: true “<br>“highlight:“ #代码块的设置，Hexo自带的代码高亮插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br></pre></td></tr></table></figure><p>分类和标签的设置<br>“default_category”：如果撰写文章时没有设置分类，默认的分类选择。<br>“category_map”：用于映射分类的别名。<br>“tag_map”：用法和分类别名是一样的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository:</span><br><span class="line">    github: git@github.com:Alvabill/Alvabill.github.io.git,master</span><br><span class="line">    coding: git@git.coding.net:Alvabill/Alvabill.git,master</span><br></pre></td></tr></table></figure><p>“theme”：主题拓展，可以在主题商店选择其他主题，这里使用next<br>“deploy”：部署方式，<a href>前文</a>已经详细描述，不再累赘。</p><h4 id="主题配置文件"><a href="#主题配置文件" class="headerlink" title="主题配置文件"></a>主题配置文件</h4><p>文件路径<code>站点根目录/themes/next/_config.yml</code>，编辑软件推荐使用Sublime Text 。<br>这里先选择主题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes  # NexT 主题提供三种布局</span><br><span class="line">#scheme: Muse</span><br><span class="line">scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure><p>主题选择，在前面加<code>#</code>注释掉其他的，这里我们选Mist，其他主题你们也可以体验一下，不过不保证本教程的优化全部适配哦，不过选择其他主题的小伙伴遇到的问题也欢迎在评论区提出一起交流。</p><h3 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h3><p>在<strong>主题配置文件</strong>中有NexT默认的RSS设置，默认为留空，这时使用 Hexo 生成的 Feed 链接，需要先安装 <a href="https://link.jianshu.com?t=https%3A%2F%2Fgithub.com%2Fhexojs%2Fhexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a>插件。<br>在站点根目录打开git bash，安装插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure><p>修改<strong>站点配置文件</strong>，在最后添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">feed: # RSS订阅插件</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 0</span><br><span class="line"></span><br><span class="line">plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure><p>修改<strong>主题配置文件</strong>如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Set rss to false to disable feed link.</span><br><span class="line"># Leave rss as empty to use site&apos;s feed link.</span><br><span class="line"># Set rss to specific value if you have burned your feed already.</span><br><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure><p>实现效果：</p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519390897568.jpg" alt></p><hr><h3 id="添加标签、分类等页面"><a href="#添加标签、分类等页面" class="headerlink" title="添加标签、分类等页面"></a>添加标签、分类等页面</h3><p>1 修改<strong>主题配置文件</strong>，在菜单项添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Menu Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)</span><br><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives/</span><br><span class="line">  tags: /tags/</span><br><span class="line">  categories: /categories/</span><br><span class="line">  about: /about/</span><br><span class="line">  #sitemap: /sitemap.xml</span><br><span class="line">  #commonweal: /404/</span><br></pre></td></tr></table></figure><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519391446050.jpg" alt></p><blockquote><p>这里可以添加图标，个人不是很喜欢所以没有添加，图标的代码就在以上代码的下边，可以自行修改体验。</p></blockquote><p>2 新建页面<br>在站点根目录输入以下代码新建页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br><span class="line">$ hexo new page categories</span><br><span class="line">$ hexo new page about</span><br></pre></td></tr></table></figure><p><code>archives</code>页面不需要新建，NexT主题自带了；tags、categories页面需要设置类型，即打开<code>站点根目录\source\tags</code>、<code>站点根目录\source\categories</code>分别进行修改：</p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519392168924.jpg" alt></p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519392119211.jpg" alt></p><blockquote><p>如果有集成评论服务，页面也会带有评论。因为后面我们会添加评论系统所以这里需要添加字段 comments 并将值设置为 false。</p></blockquote><hr><h3 id="设置网站icon"><a href="#设置网站icon" class="headerlink" title="设置网站icon"></a>设置网站icon</h3><p><strong>主题配置文件</strong>中第一行代码就是网站icon设置，这里你只需要找到你喜欢的logo把它制作成ico格式然后改名<code>favicon.ico</code>，放到<code>/themes/next/source/images</code>下面即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Put your favicon.ico into `hexo-site/source/` directory.</span><br><span class="line">favicon: /favicon.ico # 网站logo</span><br></pre></td></tr></table></figure><hr><h3 id="添加侧边栏社交链接"><a href="#添加侧边栏社交链接" class="headerlink" title="添加侧边栏社交链接"></a>添加侧边栏社交链接</h3><p>主要修改<strong>主题配置文件</strong>的社交链接和对应图标：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># Social Links</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value is the target link (E.g. GitHub: https://github.com/iissnan)</span><br><span class="line">social:  # 添加你的社交账号</span><br><span class="line">  #LinkLabel: Link</span><br><span class="line">  GitHub: https://github.com/Alvabill</span><br><span class="line">  fcc: https://www.freecodecamp.cn/alvabill</span><br><span class="line">  简书: https://www.jianshu.com/u/439a6eee60e1</span><br><span class="line">  CSDN: http://blog.csdn.net/weixin_38796712</span><br><span class="line"># Social Links Icons</span><br><span class="line"># Icon Mapping:</span><br><span class="line">#   Map a menu item to a specific FontAwesome icon name.</span><br><span class="line">#   Key is the name of the item and value is the name of FontAwesome icon. Key is case-senstive.</span><br><span class="line">#   When an globe mask icon presenting up means that the item has no mapping icon.</span><br><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  icons_only: false</span><br><span class="line">  transition: false</span><br><span class="line">  # Icon Mappings.</span><br><span class="line">  # KeyMapsToSocialItemKey: NameOfTheIconFromFontAwesome</span><br><span class="line">  fcc: free-code-camp</span><br><span class="line">  GitHub: github</span><br><span class="line">  简书: book</span><br><span class="line">  CSDN: rotate-right</span><br></pre></td></tr></table></figure><p>实现效果如下：</p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519394054058.jpg" alt></p><hr><h3 id="添加侧边栏友情链接"><a href="#添加侧边栏友情链接" class="headerlink" title="添加侧边栏友情链接"></a>添加侧边栏友情链接</h3><p>修改<strong>主题配置文件</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Blog rolls  推荐阅读</span><br><span class="line">links_title: Links</span><br><span class="line">#links_layout: block</span><br><span class="line">links_layout: inline</span><br><span class="line">links:</span><br><span class="line">  Web前端导航: http://www.alloyteam.com/nav/</span><br><span class="line">  创造狮导航: http://www.chuangzaoshi.com/code</span><br><span class="line">  前端书籍资料: http://www.36zhen.com/t?id=3448</span><br><span class="line">  掘金酱: http://e.xitu.io/</span><br><span class="line">  V2EX: https://www.v2ex.com/</span><br><span class="line">  印记中文: https://www.v2ex.com/</span><br></pre></td></tr></table></figure><p>实现效果：</p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519394239052.jpg" alt></p><hr><h3 id="底部显示建站时间和图标修改"><a href="#底部显示建站时间和图标修改" class="headerlink" title="底部显示建站时间和图标修改"></a>底部显示建站时间和图标修改</h3><p>修改<strong>主题配置文件</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Specify the date when the site was setup</span><br><span class="line">since: 2018 # 建站年份</span><br><span class="line"></span><br><span class="line"># icon between year and author @Footer</span><br><span class="line">authoricon: snowflake-o</span><br></pre></td></tr></table></figure><p>实现效果：</p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519394523529.jpg" alt></p><blockquote><p>雪花图标需要用到最新的fa图标库，后面会介绍如何设置默认库。</p></blockquote><hr><h3 id="微信支付宝打赏功能"><a href="#微信支付宝打赏功能" class="headerlink" title="微信支付宝打赏功能"></a>微信支付宝打赏功能</h3><p>在<strong>主题配置文件</strong>中的微信or支付宝收款地址处填入收款二维码图片即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Reward</span><br><span class="line">#reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！</span><br><span class="line">wechatpay: http://p3dm71oa7.bkt.clouddn.com/wcpay.png</span><br><span class="line">alipay: http://p3dm71oa7.bkt.clouddn.com/zfbpay.jpg</span><br><span class="line">#bitcoin: /images/bitcoin.png</span><br></pre></td></tr></table></figure><p>实现效果：</p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519395390692.jpg" alt></p><hr><h3 id="关闭网站动画效果"><a href="#关闭网站动画效果" class="headerlink" title="关闭网站动画效果"></a>关闭网站动画效果</h3><p>为了追求更快的响应速度我们可以把网站的大部分动画关掉，这里修改<strong>主题配置文件</strong>的一行代码即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Motion</span><br><span class="line">use_motion: [false/true]</span><br></pre></td></tr></table></figure><hr><h3 id="设置第三方JS库"><a href="#设置第三方JS库" class="headerlink" title="设置第三方JS库"></a>设置第三方JS库</h3><p>在<strong>主题配置文件</strong>中设定成合适的 CDN 地址，此特性可以加速静态资源（JavaScript 第三方库）的加载。<br>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"># Script Vendors.</span><br><span class="line"># Set a CDN address for the vendor you want to customize.</span><br><span class="line"># For example</span><br><span class="line">#    mquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js</span><br><span class="line"># Be aware that you should use the same version as internal ones to avoid potential problems.</span><br><span class="line"># Please use the https protocol of CDN files when you enable https on your site.</span><br><span class="line">vendors:</span><br><span class="line">  # Internal path prefix. Please do not edit it.</span><br><span class="line">  _internal: lib</span><br><span class="line"></span><br><span class="line">  # Internal version: 2.1.3</span><br><span class="line">  jquery: //cdn.jsdelivr.net/jquery/2.1.3/jquery.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 2.1.5</span><br><span class="line">  # See: http://fancyapps.com/fancybox/</span><br><span class="line">  fancybox: //cdn.jsdelivr.net/fancybox/2.1.5/jquery.fancybox.pack.js</span><br><span class="line">  fancybox_css: //cdn.jsdelivr.net/fancybox/2.1.5/jquery.fancybox.min.css</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.6</span><br><span class="line">  # See: https://github.com/ftlabs/fastclick</span><br><span class="line">  fastclick: //cdn.jsdelivr.net/fastclick/1.0.6/fastclick.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.9.7</span><br><span class="line">  # See: https://github.com/tuupola/jquery_lazyload</span><br><span class="line">  lazyload: //cdn.jsdelivr.net/jquery.lazyload/1.9.3/jquery.lazyload.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.2.1</span><br><span class="line">  # See: http://VelocityJS.org</span><br><span class="line">  velocity: //cdn.jsdelivr.net/velocity/1.2.3/velocity.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.2.1</span><br><span class="line">  # See: http://VelocityJS.org</span><br><span class="line">  velocity_ui: //cdn.jsdelivr.net/velocity/1.2.3/velocity.ui.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 0.7.9</span><br><span class="line">  # See: https://faisalman.github.io/ua-parser-js/</span><br><span class="line">  ua_parser: //cdn.jsdelivr.net/ua-parser.js/0.7.10/ua-parser.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 4.6.2</span><br><span class="line">  # See: http://fontawesome.io/</span><br><span class="line">  fontawesome: //maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css</span><br><span class="line"></span><br><span class="line">  # Internal version: 1</span><br><span class="line">  # https://www.algolia.com</span><br><span class="line">  algolia_instant_js:</span><br><span class="line">  algolia_instant_css:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.2</span><br><span class="line">  # See: https://github.com/HubSpot/pace</span><br><span class="line">  # Or use direct links below:</span><br><span class="line">  # pace: //cdn.bootcss.com/pace/1.0.2/pace.min.js</span><br><span class="line">  # pace_css: //cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-flash.min.css</span><br><span class="line">  pace: //cdn.bootcss.com/pace/1.0.2/pace.min.js</span><br><span class="line">  pace_css: //cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-flash.min.css</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.0</span><br><span class="line">  # https://github.com/hustcc/canvas-nest.js</span><br><span class="line">  canvas_nest: //cdn.bootcss.com/canvas-nest.js/1.0.1/canvas-nest.min.js</span><br></pre></td></tr></table></figure><hr><h3 id="添加评论系统"><a href="#添加评论系统" class="headerlink" title="添加评论系统"></a>添加评论系统</h3><p>NexT支持的第三方的评论系统有很多，不过不少已经关闭不再可用了，而且对于国内来说比较友好的现在应该就只有<a href="https://link.jianshu.com?t=https%3A%2F%2Flivere.com" target="_blank" rel="noopener">来必力</a>，当然喜欢折腾的小伙伴可以尝试一下其他的或者自建评论系统。这里就先介绍目前最简单可行的方案，也就是来必力。</p><p>获取来必力id：<br>登陆 <a href="https://link.jianshu.com?t=https%3A%2F%2Flivere.com%2F" target="_blank" rel="noopener">来必力</a> 注册获取，这里要注意，这个韩国的系统注册啥的真的太慢了，所以要记住不要耐不住关闭页面或者狂刷新，耐心等待就好。<br>注册后点击导航上边的安装，选择免费的city版本：</p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519486026113.jpg" alt></p><p>点击现在安装后填入网站的一些信息就可以获取到安装代码，框中的就是你的来必力id：</p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519486165098.jpg" alt></p><p>复制上边的id，在<strong>主题配置文件</strong>里面搜索<code>livere_uid</code>，在后面添加来必力id即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Support for LiveRe comments system.</span><br><span class="line"># You can get your uid from https://livere.com/insight/myCode (General web site)</span><br><span class="line">livere_uid: &#123;你的来必力id&#125;</span><br></pre></td></tr></table></figure><p>另外可以点击用户头像进入管理界面个性化你的评论系统：</p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519486309368.jpg" alt></p><p>最终实现效果:</p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519486370273.jpg" alt></p><hr><h3 id="统计访客量以及文章阅读量"><a href="#统计访客量以及文章阅读量" class="headerlink" title="统计访客量以及文章阅读量"></a>统计访客量以及文章阅读量</h3><p>NexT主题集成了不蒜子统计功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># Show PV/UV of the website/page with busuanzi.</span><br><span class="line"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span><br><span class="line"># 不蒜子统计功能</span><br><span class="line">busuanzi_count:</span><br><span class="line">  # count values only if the other configs are false</span><br><span class="line">  enable: false</span><br><span class="line">  # custom uv span for the whole site</span><br><span class="line">  site_uv: false</span><br><span class="line">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt;</span><br><span class="line">  site_uv_footer:</span><br><span class="line">  # custom pv span for the whole site</span><br><span class="line">  site_pv: false</span><br><span class="line">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</span><br><span class="line">  site_pv_footer:</span><br><span class="line">  # custom pv span for one page only</span><br><span class="line">  page_pv: false</span><br><span class="line">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt;</span><br><span class="line">  page_pv_footer:</span><br></pre></td></tr></table></figure><p>当<code>enable: true</code>时，代表开启全局开关。若<code>site_uv</code>、<code>site_pv</code>、<code>page_pv</code>的值均为<code>false</code>时，不蒜子仅作记录而不会在页面上显示。<br>当<code>site_uv: true</code>时，代表在页面底部显示站点的UV值。<br>当<code>site_pv: true</code>时，代表在页面底部显示站点的PV值。<br>当<code>page_pv: true</code>时，代表在文章页面的标题下显示该页面的PV值（阅读数）。<br><code>site_uv_header</code>和<code>site_uv_footer</code>这几个为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的）font-awesome。<br>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">enable: true</span><br><span class="line"># 效果：本站访客数12345人次</span><br><span class="line">site_uv: true</span><br><span class="line">site_uv_header: 本站访客数</span><br><span class="line">site_uv_footer: 人次</span><br><span class="line"># 效果：本站总访问量12345次（一般不开启这个）</span><br><span class="line">site_pv: true</span><br><span class="line">site_pv_header: 本站总访问量</span><br><span class="line">site_pv_footer: 次</span><br><span class="line"># 效果：本文总阅读量12345次</span><br><span class="line">page_pv: true</span><br><span class="line">page_pv_header: 本文总阅读量</span><br><span class="line">page_pv_footer: 次</span><br></pre></td></tr></table></figure><p>显示不了数据的原因：</p><p>打开 <code>不蒜子</code> 的官方网站 <a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子 | 不如</a> 居然看到了如下的提示：</p><p><img src="https://qiniu.itfanr.cc/blog/20181112154539.png?imageslim" alt><br>竟然是原来的域名不可用了。</p><p>解决方法：</p><p>官方也给出了相应的方法，即只需要更改 <code>next</code> 主题下的 <code>不蒜子</code> 插件的js引用链接即可。</p><p>进入 hexo 博客项目的 <code>themes</code> 目录下，在 <code>next</code> 主题目录中的 <code>layout/_third-party/analytics/</code>下找到 <code>busuanzi-counter.swig</code> 文件，</p><p>将:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>换成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>即可。</p><hr><h3 id="阅读次数统计（基于LeanCloud）"><a href="#阅读次数统计（基于LeanCloud）" class="headerlink" title="阅读次数统计（基于LeanCloud）"></a>阅读次数统计（基于LeanCloud）</h3><p>相比不蒜子的统计，<a href="https://link.jianshu.com?t=https%3A%2F%2Fleancloud.cn%2F" target="_blank" rel="noopener">LeanCloud</a>的文章阅读量统计更加稳定靠谱，所以本人也把网站的文章内统计改为LeanCloud的了。<br>设置方法参考该文章–<a href="https://link.jianshu.com?t=https%3A%2F%2Fnotes.wanghao.work%2F2015-10-21-%25E4%25B8%25BANexT%25E4%25B8%25BB%25E9%25A2%2598%25E6%25B7%25BB%25E5%258A%25A0%25E6%2596%2587%25E7%25AB%25A0%25E9%2598%2585%25E8%25AF%25BB%25E9%2587%258F%25E7%25BB%259F%25E8%25AE%25A1%25E5%258A%259F%25E8%2583%25BD.html%23%25E9%2585%258D%25E7%25BD%25AELeanCloud" target="_blank" rel="noopener">传送门</a></p><p>实现效果：</p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519488690562.jpg" alt></p><hr><h3 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h3><p>用于统计文章的字数以及分析出阅读时间。<br>在<strong>主题配置文件</strong>中，搜索<code>wordcount</code>，设置为下面这样就可以了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  min2read: true</span><br><span class="line">  wordcount: true</span><br><span class="line">  separated_meta: true</span><br></pre></td></tr></table></figure><p>再打开<code>\themes\next\layout\_macro\post.swig</code>文件，在<code>leancloud-visitors-count</code>后面位置添加一个分割符：</p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519489975360.jpg" alt></p><p>实现效果：</p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519489219127.jpg" alt><br>字数统计<br>搜到找到如下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.wordcount&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">     &#123;&#123; wordcount(post.content) &#125;&#125;</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure></p><p>添加 <code>字</code>，修改后为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.wordcount&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">     &#123;&#123; wordcount(post.content) &#125;&#125; 字</span><br><span class="line">    &lt;/span&gt;</span><br></pre></td></tr></table></figure></p><p>阅读时长<br>找到如下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.min2read&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">   &#123;&#123; min2read(post.content) &#125;&#125;</span><br><span class="line"> &lt;/span&gt;</span><br></pre></td></tr></table></figure></p><p>添加 <code>分钟</code>，修改后为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.min2read&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">   &#123;&#123; min2read(post.content) &#125;&#125; 分钟</span><br><span class="line"> &lt;/span&gt;</span><br></pre></td></tr></table></figure></p><p>再次运行，就能得到正常的如“字数统计 1888字”“阅读时长 6分钟”这样的样式了，如下图：</p><p>另外，在<code>/themes/next/layout/_partials/footer.swig</code>文件<code>endif %}</code>前加上下面代码可以实现在站点底部统计全站字数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;theme-info&quot;&gt;</span><br><span class="line">  &lt;span class=&quot;post-count&quot;&gt;Total Words:&#123;&#123; totalcount(site) &#125;&#125;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>实现效果：</p><p><img src="http://p3dm71oa7.bkt.clouddn.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1519489555153.jpg" alt></p><p>如果无法显示可能是<code>hexo-wordcount</code>插件没有安装，git bash在网站根目录安装一下就可以：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;本文为个人前一篇文章&lt;a href&gt;hexo搭建个人博客–基础篇&lt;/a&gt;的后续篇，前文主要介绍了如何搭建一个个人网站以及绑定域名等相关内容，还没有建站的伙伴们可以看一下前文，已经搭建好的就可以忽略了。&lt;br&gt;本文的优化是基于Hexo的NexT主题的，其他主题的疑问也可以在后台或评论区一起沟通交流。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo博客快速搭建教程</title>
    <link href="https://zhongchaocheng.github.io/Hexo%E5%8D%9A%E5%AE%A2%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <id>https://zhongchaocheng.github.io/Hexo博客快速搭建教程/</id>
    <published>2019-03-31T09:32:45.000Z</published>
    <updated>2019-03-31T12:28:36.132Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前在工作学习中碰到的一些问题，经常能够在别人的博客里找到解决方案，当时就萌生了自己也开一个博客的念头，记录下自己走过的坑，同时也可以记录生活，记录想法。可惜一直没有实践，直到最近看到一篇文章：利用Github Page搭建Hexo个人博客，于是就开始了解这方面的知识。经过一晚上的踩坑，终于搭建好了。下面是在我自己电脑搭建好了以后，用我舍友的电脑重新搭建来写的教程。<br><a id="more"></a><br><strong>在开始之前我们先来看看这几个问题</strong></p></blockquote><h1 id="为什么选择Github-Page"><a href="#为什么选择Github-Page" class="headerlink" title="为什么选择Github Page?"></a>为什么选择Github Page?</h1><p>现在市面上的博客很多，如CSDN，博客园，简书等平台，用户交互做的好，写的文章能被百度收录(我之前搜一些技术问题，就能搜到很多这些平台上的文章)，但是缺点会受到平台的各种限制以及会带有一些广告。</p><p>还有一种是自己购买域名和服务器，这样搭建博客的成本有点高，花力气搭建好了以后，还要定期的维护它，对于我们大多数人来说，实在是没有这样的精力和时间。</p><p>那么就有第三种选择，直接在github page平台上托管我们的博客。这样就可以安心的来写作，又不需要定期维护，而且hexo作为一个快速简洁的博客框架，用它来搭建博客真的非常容易。</p><h1 id="什么是Hexo？"><a href="#什么是Hexo？" class="headerlink" title="什么是Hexo？"></a>什么是Hexo？</h1><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo官网</a>进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><p><strong>话不多说，我们开始吧…</strong></p><p><strong>Hexo搭建步骤</strong></p><ol><li><a href="#安装Git">安装Git</a></li><li><a href="#安装NodeJs">安装NodeJs</a></li><li><a href="#安装Hexo">安装Hexo</a></li><li><a href="#GitHub创建个人仓库">GitHub创建个人仓库</a></li><li><a href="#生成SSH添加GitHub">生成SSH添加到GitHub</a></li><li><a href="#将Hexo部署到GitHub">将Hexo部署到GitHub</a></li><li><a href="#设置个人域名">设置个人域名</a></li><li><a href="#发布文章">发布文章</a></li></ol><h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。Git非常强大，我觉得建议每个人都去了解一下。廖雪峰老师的Git教程写的非常好，大家可以了解一下。<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">Git教程</a></p><p>windows：到git官网上下载,<a href="https://gitforwindows.org/" target="_blank" rel="noopener">Download git</a>,下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。如果用浏览器下载速度比较慢，可以使用迅雷下载。<br><img src="/Hexo博客快速搭建教程/git.png" alt><br>linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure></p><p>这里我使用的是win10 64位的环境，下载安装包之后，一直next就可以。</p><p>安装好以后可以在cmd里输入命令查看是否安装成功，如果返回了git的版本，那么git就已经安装好了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><h1 id="安装NodeJs"><a href="#安装NodeJs" class="headerlink" title="安装NodeJs"></a>安装NodeJs</h1><p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。</p><p>windows：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs</a>选择LTS版本就行了。同样，如果浏览器下载慢就用迅雷下载。下载好以后，打开安装包，一直next就可以。<br><img src="/Hexo博客快速搭建教程/nodejs.png" alt><br>linux：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><p>安装完后，打开cmd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></p><p>检查一下有没有安装成功</p><p>顺便说一下，windows在git安装完后，就可以直接在文件夹的空白处，右键-&gt;git bash来敲命令行了，不用自带的cmd，cmd有点难用。</p><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p>前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后<code>cd</code>到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。<br>这里我在E盘新建了一个myblog文件夹来作为这个项目的本地大本营。<br><img src="/Hexo博客快速搭建教程/git_bash.png" alt></p><p>输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><p>安装时间可能需要3-4分钟，请耐心等待…</p><p>安装好之后，可能会有WARN(warning警告)，可以不用管它，不影响后面的操作。</p><p><img src="/Hexo博客快速搭建教程/hexo_install.jpg" alt><br>依旧可以查看一下版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>至此就全部安装完了。</p><p><strong>接下来初始化一下hexo</strong><br>在你之前创建的文件夹，右键打开git bash<br>输入下面的指令，注意文件夹<strong>必须是空的</strong>，不然会报错！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p><img src="/Hexo博客快速搭建教程/hexo_init.jpg" alt><br>初始化完成后，指定文件夹目录下有：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li><strong> _config.yml: 博客的配置文件</strong></li></ul><p>输入下面两条指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g </span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>打开hexo的服务，在浏览器输入<code>localhost:4000</code>就可以看到你生成的博客了。<br>大概长这样，里面已经有了一篇Hellow World的文章：<br><img src="/Hexo博客快速搭建教程/blog_init.png" alt><br>使用ctrl+c可以把服务关掉。这里相当于是在本地服务器中预览你生成的网页。<br><code>hexo g</code>是生成静态页面的命令，<code>hexo server</code>也可以简写<code>hexo s</code>，用于开启本地服务器预览。</p><p>接下来，我们需要把博客放到github page上托管。</p><h1 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a>GitHub创建个人仓库</h1><p>首先，你先要有一个GitHub账户，去<a href="https://github.com/" target="_blank" rel="noopener">全球最大同性交友网站</a>注册一个吧。</p><p>注册完登录后，在<a href="https://github.com/" target="_blank" rel="noopener">GitHub.com</a>中点击你的头像看到一个Your repository，点击进入你的仓库<br><img src="/Hexo博客快速搭建教程/your_repository.png" alt><br>点击New，新建一个仓库<br><img src="/Hexo博客快速搭建教程/repository.png" alt><br>创建一个仓库，名字为，<code>xxx.github.io</code>，只有这样，将来要部署到GitHub page的时候，才会被识别，其中xxx就是你注册GitHub的用户名。<br><img src="/Hexo博客快速搭建教程/creat_repo.png" alt><br>填好以后，点击Create repository创建即可。</p><h1 id="生成SSH添加到GitHub"><a href="#生成SSH添加到GitHub" class="headerlink" title="生成SSH添加到GitHub"></a>生成SSH添加到GitHub</h1><p>github每次pull/push代码时要求推送代码的用户是合法的，所以每次推送时候都要输入账号密码用以验证用户是否为合法用户，而ssh是一种安全的传输模式，可以代替用户的这一“输入账号密码”的行为来验证用户。<br>1.<strong>查看是否已经存在ssh秘钥</strong></p><p>1&gt;打开git bash，输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ls</span><br></pre></td></tr></table></figure></p><ul><li>如果，提示不存在此目录，则进行第二步操作，否则，你本机已经存在ssh公钥和私钥，可以略过第二步，直接进入第三步操作。</li></ul><p>2&gt;生成ssh秘钥<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot; </span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure></p><p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。<br>可以用以下两条，检查一下你有没有输对<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure></p><p>然后创建ssh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure></p><p>代码参数含义： </p><ul><li>-t 指定密钥类型，默认是 rsa ，可以省略。 </li><li>-C 设置注释文字，比如邮箱。 </li><li>-f 指定密钥文件存储文件名。 </li><li>根据提示，需要指定文件位置和密码，如果是你足够放心，其实都可以直接回车，不需要什么密码。执行完以后，可在/c/Users/你的电脑用户名/.ssh/路径下看到刚生成的文件：id_rsa和id_rsa.pub。即公钥和私钥。<br><img src="/Hexo博客快速搭建教程/ssh.png" alt></li></ul><p>ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>3&gt;在GitHub账户中添加公钥<br>在GitHub的setting中，找到SSH and GPG keys的设置选项，点击New SSH key<br>用记事本打开id_rsa.pub，把里面的信息复制进去，创建即可。<br><img src="/Hexo博客快速搭建教程/ssh_setting.png" alt></p><p>在gitbash中，查看是否成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="/Hexo博客快速搭建教程/git_test.png" alt></p><h1 id="将Hexo部署到GitHub"><a href="#将Hexo部署到GitHub" class="headerlink" title="将Hexo部署到GitHub"></a>将Hexo部署到GitHub</h1><p>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，用记事本或其他文本编辑软件打开站点配置文件 <code>_config.yml</code>，翻到最后，修改为<br>YourgithubName就是你的GitHub账户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git </span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><ul><li>注意： 站点配置文件<code>_config.yml</code>的每个配置项xx:后面都需要一个空格，不然在运行<code>hexo g</code>生成静态页面的时候可能会报错！</li></ul><p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo generate </span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>其中<code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br><code>hexo generate</code>顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写<br><code>hexo deploy</code>部署文章，可以用<code>hexo d</code>缩写</p><p>注意deploy时可能要你输入username和password。</p><p>得到下图就说明部署成功了，过一会儿就可以在<code>http://yourname.github.io</code>这个网站看到你的博客了！！<br><img src="/Hexo博客快速搭建教程/git_success.png" alt></p><h1 id="设置个人域名"><a href="#设置个人域名" class="headerlink" title="设置个人域名"></a>设置个人域名</h1><p>现在你的个人网站的地址是 <code>yourname.github.io</code>，如果觉得这个网址逼格不太够，这就需要你设置个人域名了。但是需要花钱。</p><p>注册一个阿里云账户,在阿里云上买一个域名，我买的是<code>zhongchaocheng.top</code>，各个后缀的价格不太一样，比如最广泛的.com就比较贵，看个人喜好咯。</p><p>你需要先去进行实名认证,然后在域名控制台中，看到你购买的域名。</p><p>点<strong>解析</strong>进去，添加解析。<br><img src="/Hexo博客快速搭建教程/jiexi.png" alt></p><p><strong>注意，解析线路选择默认</strong><br><img src="/Hexo博客快速搭建教程/jiexi_setting.png" alt><br>登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名<code>zhongchaocheng.top</code><br><img src="/Hexo博客快速搭建教程/Custom%20domain.png" alt><br>点击<strong>Save</strong>保存</p><p>然后在你的博客文件source中创建一个名为CNAME文件，不要后缀。写上你的域名。<br><img src="/Hexo博客快速搭建教程/CNAME.png" alt><br>最后，在gitbash中，输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>过不了多久，再打开你的浏览器，输入你自己的域名，就可以看到搭建的网站啦！</p><h1 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h1><p>接下来你就可以正式开始写文章了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new newpapername</span><br></pre></td></tr></table></figure></p><p>newpapername是你的文章名字，例如“Hello World”<br>然后在source/_post中打开markdown文件，就可以开始编辑了。当你写完的时候，再<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>就可以看到更新了。</p><p><strong>到此为止，你的个人Hexo博客就算搭建成功了，当然这些只是实现了最基本的，其他还有hexo的基本配置，更换主题，实现多终端工作，以及在coding page部署实现国内外分流。这些操作在后面的博客里会介绍。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;之前在工作学习中碰到的一些问题，经常能够在别人的博客里找到解决方案，当时就萌生了自己也开一个博客的念头，记录下自己走过的坑，同时也可以记录生活，记录想法。可惜一直没有实践，直到最近看到一篇文章：利用Github Page搭建Hexo个人博客，于是就开始了解这方面的知识。经过一晚上的踩坑，终于搭建好了。下面是在我自己电脑搭建好了以后，用我舍友的电脑重新搭建来写的教程。&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://zhongchaocheng.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
